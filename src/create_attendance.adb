--{6:}
WITH APQ;USE APQ;WITH APQ.MYSQL.CLIENT;USE APQ.MYSQL.CLIENT;
WITH ADA.TEXT_IO;USE ADA.TEXT_IO;--{:6}{12:}
WITH USTRINGS;USE USTRINGS;WITH GETOPT;USE GETOPT;--{:12}
PROCEDURE CREATE_ATTENDANCE IS--{7:}
TYPE EVENT_DATE IS NEW APQ_DATE;TYPE STUDENT_ID_TYPE IS NEW APQ_INTEGER;
TYPE STUDENT_RECORD IS RECORD LAST_NAME:USTRING;FIRST_NAME:USTRING;
ID:STUDENT_ID_TYPE;RANDOM_ID:STUDENT_ID_TYPE;STATUS:USTRING;
DESCRIPTION:USTRING;EDATE:EVENT_DATE;END RECORD;--{:7}{8:}
MAXSTUDENTS:CONSTANT STUDENT_ID_TYPE:=100;
MAXDATES:CONSTANT STUDENT_ID_TYPE:=30;
MAXRECORDS:CONSTANT STUDENT_ID_TYPE:=(MAXSTUDENTS*MAXDATES);--{:8}{9:}
C:CONNECTION_TYPE;Q:ROOT_QUERY_TYPE'CLASS:=NEW_QUERY(C);--{:9}{11:}
UNAME:USTRING:=U("evansjr");PASSWD:USTRING:=U("elephant");LAST:POSITIVE;
PARAM:USTRING;--{:11}{15:}
FUNCTION VALUE IS NEW INTEGER_VALUE(STUDENT_ID_TYPE);
FUNCTION VALUE IS NEW DATE_VALUE(EVENT_DATE);
PACKAGE STUD_IO IS NEW INTEGER_IO(STUDENT_ID_TYPE);USE STUD_IO;
PACKAGE BOOL_IO IS NEW ENUMERATION_IO(BOOLEAN);USE BOOL_IO;
OLD_ID:STUDENT_ID_TYPE:=0;SR:ARRAY(1..MAXRECORDS)OF STUDENT_RECORD;
--{:15}{18:}
DEBUG:BOOLEAN:=FALSE;DEBUG2:BOOLEAN:=FALSE;RECNO:STUDENT_ID_TYPE:=0;
TOTAL_RECORDS:STUDENT_ID_TYPE:=0;--{:18}{22:}
CURRENT_ID,NEW_ID:STUDENT_ID_TYPE;--{:22}
BEGIN--{10:}
IF OPTION_PRESENT(U("-d"))THEN GET_OPTION(U("-d"),PARAM);
GET(S(PARAM),DEBUG,LAST);ELSE DEBUG:=FALSE;END IF;
IF OPTION_PRESENT(U("-u"))THEN GET_OPTION(U("-u"),UNAME);
IF DEBUG THEN PUT("Your username is ");PUT_LINE(UNAME);END IF;END IF;
IF OPTION_PRESENT(U("-p"))THEN GET_OPTION(U("-p"),PASSWD);
IF DEBUG THEN PUT("Your password is ");PUT_LINE(PASSWD);END IF;END IF;
--{:10}{13:}
PUT_LINE("Choosing DB to use.");SET_DB_NAME(C,"Class2013");
PUT_LINE("Choosing password.");SET_USER_PASSWORD(C,S(UNAME),S(PASSWD));
PUT_LINE("Attempting to connect.");MY_CONNECT(C);--{:13}{14:}
PREPARE(Q,"SELECT class_2013.id, class_2013.last_name,");
APPEND_LINE(Q,"class_2013.first_name,random_id.rand_id, ");
APPEND_LINE(Q,"attendance.status, events.date");
APPEND_LINE(Q,"FROM class_2013, random_id, attendance, events");
APPEND_LINE(Q,"WHERE (class_2013.id = random_id.id) AND ");
APPEND_LINE(Q,"(class_2013.id = attendance.student_id)");
APPEND_LINE(Q,"AND (events.id = attendance.event_id)");
APPEND_LINE(Q,"ORDER BY class_2013.id, attendance.event_id;");
EXECUTE_CHECKED(Q,C);--{:14}{16:}
IF(DEBUG)THEN PUT_LINE("Attendance:");NEW_LINE;
PUT_LINE("Id   Last Name     First Name     Status    Date");PUT_LINE(
"--   ---------------------------------------- --------------------");
END IF;--{:16}{17:}
RECNO:=0;LOOP BEGIN FETCH(Q);EXCEPTION WHEN NO_TUPLE=>EXIT;END;
RECNO:=RECNO+1;SR(RECNO).ID:=VALUE(Q,1);SR(RECNO).RANDOM_ID:=VALUE(Q,4);
IF DEBUG2 THEN PUT("Id read in is ");PUT(SR(RECNO).ID);
PUT(".  recno is ");PUT(RECNO);PUT_LINE(". ");END IF;
DECLARE LAST_NAME:STRING:=VALUE(Q,2);FIRST_NAME:STRING:=VALUE(Q,3);
BEGIN SR(RECNO).LAST_NAME:=U(LAST_NAME);
SR(RECNO).FIRST_NAME:=U(FIRST_NAME);END;
DECLARE YR_STATUS:STRING:=VALUE(Q,5);
BEGIN SR(RECNO).STATUS:=U(YR_STATUS);END;
SR(RECNO).DESCRIPTION:=U("nothing");SR(RECNO).EDATE:=VALUE(Q,6);
END LOOP;TOTAL_RECORDS:=RECNO;--{:17}{19:}
IF DEBUG THEN PUT_LINE("The size of the main list is ");
PUT(TOTAL_RECORDS);PUT_LINE(" ");END IF;CURRENT_ID:=0;
FOR I IN 1..TOTAL_RECORDS LOOP NEW_ID:=SR(I).ID;
IF(NEW_ID/=CURRENT_ID)THEN CURRENT_ID:=NEW_ID;--{20:}
PUT_LINE(" ");IF(DEBUG)THEN PUT(NEW_ID);PUT(", ");END IF;
PUT(SR(I).LAST_NAME);PUT("; ");PUT(SR(I).FIRST_NAME);--{:20}
END IF;--{21:}
PUT(", ");IF(S(SR(I).STATUS)="present")THEN PUT("\P");
ELSIF(S(SR(I).STATUS)="absent")THEN PUT("\A");
ELSIF(S(SR(I).STATUS)="excused")THEN PUT("\E");
ELSIF(S(SR(I).STATUS)="blank")THEN PUT(" ");ELSE PUT("?");END IF;--{:21}
END LOOP;--{:19}
END CREATE_ATTENDANCE;--{:5}

